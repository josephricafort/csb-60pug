{"version":3,"sources":["data/personTypesData.js","utils/globalConst.js","components/ui/usePerTypeStates.js","components/ui/useSelectorPerType.js","utils/helpers.js","components/shapes/Arc.js","components/shapes/ArcHollow.js","components/CognitiveFunction.js","data/cogFuncAllConfig.js","components/ui/Slider.js","containers/GridLoop/styledComps.js","containers/CompareTypesGrid.js","containers/CogFuncExplorer/ParamControls.js","components/ui/SelectorPerFunc.js","containers/CogFuncExplorer/CogFuncExplorer.js","App.js","index.js"],"names":["personTypesData","type","funcsStack","cogFunc","isExvert","stackFunc","cogFuncPriorities","function","short","cognitiveFunctions","cogFuncsArrs","usePerTypeStates","eiArr","snArr","tfArr","jpArr","useState","ei","setEI","sn","setSN","tf","setTF","jp","setJP","cogFuncsStates","styled","div","button","value","currType","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","describeArc","startAngle","endAngle","start","end","largeArcFlag","join","describeArcHollow","radiusHollow","startHollow","endHollow","round2Dec","num","round","Number","EPSILON","usePrevious","ref","useRef","useEffect","current","Path","path","hasTransition","Arc","fill","gap","className","d","opacity","ClipPathStyled","clipPath","defaultStylesProps","radiusFull","CognitiveFunction","currCogFunc","currStackFunc","chartId","stylesProps","config","cogFuncConfig","stackFuncConfig","xVersionConfig","cogFuncIdx","map","indexOf","isExvertIdx","stackFuncIdx","style","quad","rotation","innerRadiusRatio","areaRatio","commonProps","rScale","ir","arcHollowProps","arcProps","isExvertLabel","uniqueId","cogFuncId","clipPathId","transformClipPath","transformCogFunc","transform","transformOrigin","Transition","classNames","in","timeout","id","width","height","ArcHollow","cogFuncAllConfig","xVersFunc","Container","chartAreaDim","prioritiesDim","svg","g","bgColor","text","circle","Label","span","isHighlighted","Slider","nameLeft","nameRight","min","max","setValue","step","isHighlightedLeft","val","onChange","event","target","ParamControls","states","mbtiLetters","ns","setNs","setTf","xvn","setXvn","ieLetter","nsLetter","tfLetter","pjLetter","eiBtn","nsBtn","tfBtn","pjBtn","prevEiBtn","prevNsBtn","prevTfBtn","ratio","prObj","flat","i","cf","idx","toUpperCase","sort","a","b","pr","find","SelectorButtons","ButtonGroup","Button","letter","arrFuncState","SelectorPerFunc","getFuncState","either","some","group","j","onClick","handleButtonClick","CogFuncExplorer","domAux","intSens","paramValues","n","s","t","f","cogFuncShortIdx","cfshort","isDomExvert","Object","entries","sfIdx","sf","cogFuncShort","getFuncVal","svgDims","getDomCogFunc","daArr","pjArr","filter","e","isPOrJ","setFunc","viewBox","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.14497d4b.chunk.js","sourcesContent":["export const personTypesData = [\r\n  {\r\n    type: \"ESTJ\",\r\n    funcsStack: [\r\n      { cogFunc: \"thinking\", isExvert: true, stackFunc: \"dominant\" },\r\n      { cogFunc: \"sensing\", isExvert: false, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"intuition\", isExvert: true, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"feeling\", isExvert: false, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"ESFJ\",\r\n    funcsStack: [\r\n      { cogFunc: \"feeling\", isExvert: true, stackFunc: \"dominant\" },\r\n      { cogFunc: \"sensing\", isExvert: false, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"intuition\", isExvert: true, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"thinking\", isExvert: false, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"ESTP\",\r\n    funcsStack: [\r\n      { cogFunc: \"sensing\", isExvert: true, stackFunc: \"dominant\" },\r\n      { cogFunc: \"thinking\", isExvert: false, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"feeling\", isExvert: true, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"intuition\", isExvert: false, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"ESFP\",\r\n    funcsStack: [\r\n      { cogFunc: \"sensing\", isExvert: true, stackFunc: \"dominant\" },\r\n      { cogFunc: \"feeling\", isExvert: false, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"thinking\", isExvert: true, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"intuition\", isExvert: false, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"ENTJ\",\r\n    funcsStack: [\r\n      { cogFunc: \"thinking\", isExvert: true, stackFunc: \"dominant\" },\r\n      { cogFunc: \"intuition\", isExvert: false, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"sensing\", isExvert: true, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"feeling\", isExvert: false, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"ENFJ\",\r\n    funcsStack: [\r\n      { cogFunc: \"feeling\", isExvert: true, stackFunc: \"dominant\" },\r\n      { cogFunc: \"intuition\", isExvert: false, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"sensing\", isExvert: true, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"thinking\", isExvert: false, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"ENTP\",\r\n    funcsStack: [\r\n      { cogFunc: \"intuition\", isExvert: true, stackFunc: \"dominant\" },\r\n      { cogFunc: \"thinking\", isExvert: false, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"feeling\", isExvert: true, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"sensing\", isExvert: false, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"ENFP\",\r\n    funcsStack: [\r\n      { cogFunc: \"intuition\", isExvert: true, stackFunc: \"dominant\" },\r\n      { cogFunc: \"feeling\", isExvert: false, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"thinking\", isExvert: true, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"sensing\", isExvert: false, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"ISTJ\",\r\n    funcsStack: [\r\n      { cogFunc: \"sensing\", isExvert: false, stackFunc: \"dominant\" },\r\n      { cogFunc: \"thinking\", isExvert: true, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"feeling\", isExvert: false, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"intuition\", isExvert: true, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"ISFJ\",\r\n    funcsStack: [\r\n      { cogFunc: \"sensing\", isExvert: false, stackFunc: \"dominant\" },\r\n      { cogFunc: \"feeling\", isExvert: true, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"thinking\", isExvert: false, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"intuition\", isExvert: true, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"ISTP\",\r\n    funcsStack: [\r\n      { cogFunc: \"thinking\", isExvert: false, stackFunc: \"dominant\" },\r\n      { cogFunc: \"sensing\", isExvert: true, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"intuition\", isExvert: false, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"feeling\", isExvert: true, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"ISFP\",\r\n    funcsStack: [\r\n      { cogFunc: \"feeling\", isExvert: false, stackFunc: \"dominant\" },\r\n      { cogFunc: \"sensing\", isExvert: true, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"intuition\", isExvert: false, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"thinking\", isExvert: true, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"INTJ\",\r\n    funcsStack: [\r\n      { cogFunc: \"intuition\", isExvert: false, stackFunc: \"dominant\" },\r\n      { cogFunc: \"thinking\", isExvert: true, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"feeling\", isExvert: false, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"sensing\", isExvert: true, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"INFJ\",\r\n    funcsStack: [\r\n      { cogFunc: \"intuition\", isExvert: false, stackFunc: \"dominant\" },\r\n      { cogFunc: \"feeling\", isExvert: true, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"thinking\", isExvert: false, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"sensing\", isExvert: true, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"INTP\",\r\n    funcsStack: [\r\n      { cogFunc: \"thinking\", isExvert: false, stackFunc: \"dominant\" },\r\n      { cogFunc: \"intuition\", isExvert: true, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"sensing\", isExvert: false, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"feeling\", isExvert: true, stackFunc: \"inferior\" }\r\n    ]\r\n  },\r\n  {\r\n    type: \"INFP\",\r\n    funcsStack: [\r\n      { cogFunc: \"feeling\", isExvert: false, stackFunc: \"dominant\" },\r\n      { cogFunc: \"intuition\", isExvert: true, stackFunc: \"auxiliary\" },\r\n      { cogFunc: \"sensing\", isExvert: false, stackFunc: \"tertiary\" },\r\n      { cogFunc: \"thinking\", isExvert: true, stackFunc: \"inferior\" }\r\n    ]\r\n  }\r\n];\r\n","export const cogFuncPriorities = [\r\n  { function: \"dominant\", short: \"dom\" },\r\n  { function: \"auxiliary\", short: \"aux\" },\r\n  { function: \"tertiary\", short: \"ter\" },\r\n  { function: \"inferior\", short: \"inf\" }\r\n];\r\n\r\nexport const cognitiveFunctions = [\r\n  { function: \"intuition\", short: \"n\" },\r\n  { function: \"sensing\", short: \"s\" },\r\n  { function: \"thinking\", short: \"t\" },\r\n  { function: \"feeling\", short: \"f\" }\r\n];\r\n\r\nexport const eightCogFuncs = [\r\n  {\r\n    function: \"extraverted intuition\",\r\n    short: \"ne\"\r\n  },\r\n  {\r\n    function: \"introverted intuition\",\r\n    short: \"ni\"\r\n  },\r\n  {\r\n    function: \"extraverted sensing\",\r\n    short: \"se\"\r\n  },\r\n  {\r\n    function: \"introverted sensing\",\r\n    short: \"si\"\r\n  },\r\n  {\r\n    function: \"extraverted thinking\",\r\n    short: \"te\"\r\n  },\r\n  {\r\n    function: \"introverted thinking\",\r\n    short: \"ti\"\r\n  },\r\n  {\r\n    function: \"extraverted feeling\",\r\n    short: \"fe\"\r\n  },\r\n  {\r\n    function: \"introverted feeling\",\r\n    short: \"fi\"\r\n  }\r\n];\r\n\r\nexport const eiArr = [\"E\", \"I\"];\r\nexport const snArr = [\"S\", \"N\"];\r\nexport const tfArr = [\"T\", \"F\"];\r\nexport const jpArr = [\"J\", \"P\"];\r\nexport const cogFuncsArrs = [eiArr, snArr, tfArr, jpArr];\r\n","import { useState } from \"react\";\r\n\r\nimport { cogFuncsArrs } from \"../../utils/globalConst\";\r\n\r\nexport function usePerTypeStates() {\r\n  const [eiArr, snArr, tfArr, jpArr] = cogFuncsArrs;\r\n\r\n  const [ei, setEI] = useState(eiArr[0]);\r\n  const [sn, setSN] = useState(snArr[0]);\r\n  const [tf, setTF] = useState(tfArr[0]);\r\n  const [jp, setJP] = useState(jpArr[0]);\r\n  const cogFuncsStates = [\r\n    { ei, setEI },\r\n    { sn, setSN },\r\n    { tf, setTF },\r\n    { jp, setJP }\r\n  ];\r\n\r\n  return { cogFuncsArrs, cogFuncsStates };\r\n}\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { personTypesData } from \"../../data/personTypesData\";\r\nimport { usePerTypeStates } from \"./usePerTypeStates\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  border: 1px solid #aaa;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst ButtonGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, calc(100% / 4 - (5px / 3)));\r\n  grid-template-rows: auto;\r\n  column-gap: 5px;\r\n  row-gap: 5px;\r\n  max-width: 400px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px;\r\n  border: none;\r\n  background-color: ${({ value, currType }) =>\r\n    value === currType ? \"#e6ee9c\" : \"#eee\"};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #ddd;\r\n  }\r\n`;\r\n\r\nexport const useSelectorPerType = () => {\r\n  const {\r\n    cogFuncsStates: [{ ei }, { sn }, { tf }, { jp }]\r\n  } = usePerTypeStates();\r\n  const [selectedType, setSelectedType] = useState(ei.concat(sn, tf, jp));\r\n\r\n  const typesRefSeq = personTypesData.map((d) => d.type);\r\n\r\n  const handleSelectType = (e) => {\r\n    setSelectedType(e.target.value);\r\n  };\r\n\r\n  const SelectorPerType = () => (\r\n    <Container className=\"selector-per-type\">\r\n      <p>Select type</p>\r\n      <ButtonGrid className=\"button-grid\">\r\n        {typesRefSeq.map((t, i) => (\r\n          <Button\r\n            key={i}\r\n            value={t}\r\n            currType={setSelectedType}\r\n            onClick={handleSelectType}\r\n          >\r\n            {t}\r\n          </Button>\r\n        ))}\r\n      </ButtonGrid>\r\n    </Container>\r\n  );\r\n\r\n  return { SelectorPerType, selectedType, setSelectedType };\r\n};\r\n\r\nexport default useSelectorPerType;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\r\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\r\n\r\n  return {\r\n    x: centerX + radius * Math.cos(angleInRadians),\r\n    y: centerY + radius * Math.sin(angleInRadians)\r\n  };\r\n}\r\n\r\nexport function describeArc(x, y, radius, startAngle, endAngle) {\r\n  const start = polarToCartesian(x, y, radius, endAngle);\r\n  const end = polarToCartesian(x, y, radius, startAngle);\r\n\r\n  const largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n\r\n  const d = [\r\n    \"M\",\r\n    start.x,\r\n    start.y,\r\n    \"A\",\r\n    radius,\r\n    radius,\r\n    0,\r\n    largeArcFlag,\r\n    0,\r\n    end.x,\r\n    end.y,\r\n    \"L\",\r\n    x,\r\n    y\r\n  ].join(\" \");\r\n\r\n  return d;\r\n}\r\n\r\nexport function describeArcHollow(\r\n  x,\r\n  y,\r\n  radius,\r\n  startAngle,\r\n  endAngle,\r\n  radiusHollow\r\n) {\r\n  const start = polarToCartesian(x, y, radius, endAngle);\r\n  const end = polarToCartesian(x, y, radius, startAngle);\r\n\r\n  const startHollow = polarToCartesian(x, y, radiusHollow, startAngle);\r\n  const endHollow = polarToCartesian(x, y, radiusHollow, endAngle);\r\n\r\n  const largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n\r\n  const d = [\r\n    \"M\",\r\n    start.x,\r\n    start.y,\r\n    \"A\",\r\n    radius,\r\n    radius,\r\n    0,\r\n    largeArcFlag,\r\n    0,\r\n    end.x,\r\n    end.y,\r\n    \"L\",\r\n    startHollow.x,\r\n    startHollow.y,\r\n    \"A\",\r\n    radiusHollow,\r\n    radiusHollow,\r\n    0,\r\n    largeArcFlag,\r\n    1,\r\n    endHollow.x,\r\n    endHollow.y,\r\n    \"L\",\r\n    start.x,\r\n    start.y\r\n  ].join(\" \");\r\n\r\n  return d;\r\n}\r\n\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nexport const round2Dec = (num) =>\r\n  Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport function usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport function hexToHSLObj(H) {\r\n  // Convert hex to RGB first\r\n  let r = 0,\r\n    g = 0,\r\n    b = 0;\r\n  if (H.length === 4) {\r\n    r = \"0x\" + H[1] + H[1];\r\n    g = \"0x\" + H[2] + H[2];\r\n    b = \"0x\" + H[3] + H[3];\r\n  } else if (H.length === 7) {\r\n    r = \"0x\" + H[1] + H[2];\r\n    g = \"0x\" + H[3] + H[4];\r\n    b = \"0x\" + H[5] + H[6];\r\n  }\r\n  // Then to HSL\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n  let cmin = Math.min(r, g, b),\r\n    cmax = Math.max(r, g, b),\r\n    delta = cmax - cmin,\r\n    h = 0,\r\n    s = 0,\r\n    l = 0;\r\n\r\n  if (delta === 0) h = 0;\r\n  else if (cmax === r) h = ((g - b) / delta) % 6;\r\n  else if (cmax === g) h = (b - r) / delta + 2;\r\n  else h = (r - g) / delta + 4;\r\n\r\n  h = Math.round(h * 60);\r\n\r\n  if (h < 0) h += 360;\r\n\r\n  l = (cmax + cmin) / 2;\r\n  s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n  s = +(s * 100).toFixed(1);\r\n  l = +(l * 100).toFixed(1);\r\n\r\n  // return \"hsl(\" + h + \",\" + s + \"%,\" + l + \"%)\";\r\n  return { h, s, l };\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { describeArc } from \"../../utils/helpers\";\r\n\r\nconst Path = styled.path`\r\n  ${({ hasTransition }) =>\r\n    hasTransition\r\n      ? `\r\n      -webkit-transition: all 1s ease;\r\n      -o-transition: all 1s ease;\r\n      transition: all 1s ease;`\r\n      : `transition: none;`}\r\n  -webkit-transition: transform 0.35s ease;\r\n  -o-transition: transform 0.35s ease;\r\n  transition: transform 0.35s ease;\r\n`;\r\n\r\nconst Arc = ({\r\n  x,\r\n  y,\r\n  radius,\r\n  startAngle,\r\n  endAngle,\r\n  fill,\r\n  isExvert,\r\n  gap,\r\n  hasTransition\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Path\r\n        className=\"arc\"\r\n        d={describeArc(x, y, radius - gap / 2, startAngle, endAngle, gap)}\r\n        opacity={isExvert ? 0.35 : 1}\r\n        fill={fill}\r\n        hasTransition={hasTransition}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Arc;\r\n","import React, { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { describeArcHollow } from \"../../utils/helpers\";\r\n\r\nconst Path = styled.path`\r\n  ${({ hasTransition }) =>\r\n    hasTransition\r\n      ? `\r\n      -webkit-transition: all 1s ease;\r\n      -o-transition: all 1s ease;\r\n      transition: all 1s ease;`\r\n      : `transition: none;`}\r\n  -webkit-transition: transform 0.35s ease;\r\n  -o-transition: transform 0.35s ease;\r\n  transition: transform 0.35s ease;\r\n`;\r\n\r\nconst Arc = ({\r\n  x,\r\n  y,\r\n  radius,\r\n  startAngle,\r\n  endAngle,\r\n  radiusHollow,\r\n  fill,\r\n  isExvert,\r\n  gap,\r\n  hasTransition\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Path\r\n        className=\"arc\"\r\n        d={describeArcHollow(\r\n          x,\r\n          y,\r\n          radius,\r\n          startAngle,\r\n          endAngle,\r\n          radiusHollow + gap / 2,\r\n          gap\r\n        )}\r\n        opacity={isExvert ? 1 : 0.35}\r\n        fill={fill}\r\n        hasTransition={hasTransition}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Arc;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Transition } from \"react-transition-group\";\r\n\r\nimport Arc from \"../components/shapes/Arc\";\r\nimport ArcHollow from \"../components/shapes/ArcHollow\";\r\n// import { cogFuncAllConfig } from \"../data/cogFuncAllConfig\";\r\n\r\nconst ClipPathStyled = styled.clipPath`\r\n  transition: ${({ hasTransition }) =>\r\n    hasTransition ? `all 1s ease` : `none`};\r\n  transform-origin: center;\r\n`;\r\n\r\nconst defaultStylesProps = {\r\n  x: 250,\r\n  y: 250,\r\n  startAngle: -90,\r\n  endAngle: 0,\r\n  radiusFull: 250,\r\n  gap: 10\r\n};\r\n\r\nconst CognitiveFunction = ({\r\n  type = \"ESTJ\",\r\n  cogFunc: currCogFunc,\r\n  isExvert = true,\r\n  stackFunc: currStackFunc,\r\n  chartId = \"\",\r\n  stylesProps = defaultStylesProps,\r\n  config,\r\n  hasTransition\r\n}) => {\r\n  const { cogFuncConfig, stackFuncConfig, xVersionConfig } = config;\r\n\r\n  const cogFuncIdx = cogFuncConfig.map((d) => d.cogFunc).indexOf(currCogFunc);\r\n  const isExvertIdx = isExvert ? 0 : 1;\r\n  const stackFuncIdx = stackFuncConfig\r\n    .map((d) => d.stackFunc)\r\n    .indexOf(currStackFunc);\r\n\r\n  const {\r\n    style: { fill, quad }\r\n  } = cogFuncConfig[cogFuncIdx];\r\n  const {\r\n    style: { rotation }\r\n  } = stackFuncConfig[stackFuncIdx];\r\n  const {\r\n    style: { areaRatio, innerRadiusRatio }\r\n  } = xVersionConfig[isExvertIdx];\r\n\r\n  const commonProps = {\r\n    ...stylesProps,\r\n    isExvert,\r\n    fill,\r\n    hasTransition\r\n  };\r\n\r\n  const { x, y, radiusFull } = commonProps;\r\n  // const rScale = (areaRatio) => radiusFull / Math.sqrt(areaRatio + 1);\r\n  const rScale = (ir) => radiusFull * ir;\r\n\r\n  const arcHollowProps = {\r\n    ...commonProps,\r\n    radius: radiusFull,\r\n    // radiusHollow: rScale(areaRatio)\r\n    radiusHollow: rScale(innerRadiusRatio)\r\n  };\r\n  const arcProps = {\r\n    ...commonProps,\r\n    // radius: rScale(areaRatio)\r\n    radius: rScale(innerRadiusRatio)\r\n  };\r\n\r\n  const isExvertLabel = isExvert ? \"extravert\" : \"introvert\";\r\n  const uniqueId = `${chartId}-${type}-${currCogFunc}-${currStackFunc}-${isExvertLabel}`;\r\n  const cogFuncId = `cogfunc-${uniqueId}`;\r\n  const clipPathId = `clip-path-${uniqueId}`;\r\n  const transformClipPath = `rotate(${rotation})`;\r\n  const transformCogFunc = `scale(${quad[0] ? -1 : 1} ${quad[1] ? -1 : 1})`;\r\n\r\n  return (\r\n    <g\r\n      className=\"cognitive-function\"\r\n      transform={transformCogFunc}\r\n      style={{ transformOrigin: \"center\" }}\r\n    >\r\n      <Transition classNames=\"cog-func-transition\" in={true} timeout={1000}>\r\n        <ClipPathStyled\r\n          id={cogFuncId}\r\n          transform={transformClipPath}\r\n          hasTransition={hasTransition}\r\n        >\r\n          <rect id={clipPathId} width={x} height={y} />\r\n        </ClipPathStyled>\r\n      </Transition>\r\n      {/* <use xlinkHref={`#${clipPathId}`} fill=\"#eee\" /> */}\r\n      <g className=\"arcs\" clipPath={`url(#${cogFuncId})`}>\r\n        <ArcHollow {...arcHollowProps} />\r\n        <Arc {...arcProps} />\r\n      </g>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default CognitiveFunction;\r\n","export const cogFuncAllConfig = {\r\n  default: {\r\n    cogFuncConfig: [\r\n      { cogFunc: \"intuition\", style: { fill: \"#66BB6A\", quad: [0, 0] } },\r\n      { cogFunc: \"sensing\", style: { fill: \"#FFB74D\", quad: [0, 1] } },\r\n      { cogFunc: \"thinking\", style: { fill: \"#4FC3F7\", quad: [1, 0] } },\r\n      { cogFunc: \"feeling\", style: { fill: \"#F06292\", quad: [1, 1] } }\r\n    ],\r\n    stackFuncConfig: [\r\n      { stackFunc: \"dominant\", style: { rotation: -18 * 0 } },\r\n      { stackFunc: \"auxiliary\", style: { rotation: -18 * 2 } },\r\n      { stackFunc: \"tertiary\", style: { rotation: -18 * 3 } },\r\n      { stackFunc: \"inferior\", style: { rotation: -18 * 4.5 } }\r\n    ],\r\n    xVersionConfig: [\r\n      { xVersFunc: \"extraversion\", style: { areaRatio: 10 / 3 } },\r\n      { xVersFunc: \"introversion\", style: { areaRatio: 3 / 5 } }\r\n    ]\r\n  },\r\n  extraIntro: {\r\n    cogFuncConfig: [\r\n      { cogFunc: \"intuition\", style: { fill: \"#333333\", quad: [0, 0] } },\r\n      { cogFunc: \"sensing\", style: { fill: \"#333333\", quad: [0, 1] } },\r\n      { cogFunc: \"thinking\", style: { fill: \"#333333\", quad: [1, 0] } },\r\n      { cogFunc: \"feeling\", style: { fill: \"#333333\", quad: [1, 1] } }\r\n    ],\r\n    stackFuncConfig: [\r\n      { stackFunc: \"dominant\", style: { rotation: -18 * -1 } },\r\n      { stackFunc: \"auxiliary\", style: { rotation: -18 * -1 } },\r\n      { stackFunc: \"tertiary\", style: { rotation: -18 * 5 } },\r\n      { stackFunc: \"inferior\", style: { rotation: -18 * 5 } }\r\n    ],\r\n    xVersionConfig: [\r\n      { xVersFunc: \"extraversion\", style: { areaRatio: 10 / 3 } },\r\n      { xVersFunc: \"introversion\", style: { areaRatio: 3 / 5 } }\r\n    ]\r\n  },\r\n  perceiveJudge: {\r\n    cogFuncConfig: [\r\n      { cogFunc: \"intuition\", style: { fill: \"#DCE775\", quad: [0, 0] } },\r\n      { cogFunc: \"sensing\", style: { fill: \"#DCE775\", quad: [0, 1] } },\r\n      { cogFunc: \"thinking\", style: { fill: \"#BA68C8\", quad: [1, 0] } },\r\n      { cogFunc: \"feeling\", style: { fill: \"#BA68C8\", quad: [1, 1] } }\r\n    ],\r\n    stackFuncConfig: [\r\n      { stackFunc: \"dominant\", style: { rotation: 18 * -2 } },\r\n      { stackFunc: \"auxiliary\", style: { rotation: 18 * -2 } },\r\n      { stackFunc: \"tertiary\", style: { rotation: 18 * -2 } },\r\n      { stackFunc: \"inferior\", style: { rotation: 18 * -2 } }\r\n    ],\r\n    xVersionConfig: [\r\n      { xVersFunc: \"extraversion\", style: { areaRatio: 2 } },\r\n      { xVersFunc: \"introversion\", style: { areaRatio: 2 } }\r\n    ]\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 20px auto;\r\n\r\n  .names {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  input {\r\n    cursor: pointer;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Label = styled.span`\r\n  font-weight: ${({ isHighlighted }) => (isHighlighted ? `700` : `500`)};\r\n`;\r\n\r\nconst Slider = ({\r\n  nameLeft = \"\",\r\n  nameRight = \"\",\r\n  min = 0,\r\n  max = 1,\r\n  value = 0.5,\r\n  setValue,\r\n  step = 0.01\r\n}) => {\r\n  const isHighlightedLeft = (val) => val < max / 2;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"slider-container\">\r\n      <div className=\"names\">\r\n        <Label className=\"name-left\" isHighlighted={isHighlightedLeft(value)}>\r\n          {nameLeft}\r\n        </Label>\r\n        <Label className=\"name-right\" isHighlighted={!isHighlightedLeft(value)}>\r\n          {nameRight}\r\n        </Label>\r\n      </div>\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        value={value}\r\n        onChange={handleChange}\r\n        className=\"slider\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  ${({ chartAreaDim, prioritiesDim }) => `\r\n    grid-template-columns: ${prioritiesDim.width}px ${chartAreaDim.width}px  ;\r\n  `}\r\n  grid-template-rows: auto;\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ChartArea = styled.svg`\r\n  position: relative;\r\n`;\r\n\r\nexport const Chart = styled.g`\r\n  -webkit-transition: transform 1s ease;\r\n  -webkit-transition: -webkit-transform 1s ease;\r\n  transition: -webkit-transform 1s ease;\r\n  -o-transition: transform 1s ease;\r\n  transition: transform 1s ease;\r\n  transition: transform 1s ease, -webkit-transform 1s ease;\r\n`;\r\n\r\nexport const PrioritiesArea = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  border-right: 1px solid #aaa;\r\n`;\r\n\r\nexport const PrOutcome = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: ${({ height }) => height}px;\r\n\r\n  &:nth-child(even) {\r\n    height: 0;\r\n  }\r\n`;\r\n\r\nexport const PrLabel = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  color: ${({ bgColor }) => (bgColor === \"#9E9E9E\" ? \"#FFF\" : \"#000\")};\r\n  width: 100%;\r\n  padding: 5px auto;\r\n`;\r\n\r\nexport const XversionArea = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: stretch;\r\n  height: ${({ height }) => height}px;\r\n  border-bottom: 1px solid #aaa;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const XversionLabel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: stretch;\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  color: ${({ bgColor }) => (bgColor === \"#9E9E9E\" ? \"#FFF\" : \"#000\")};\r\n  max-width: 100px;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const Label = styled.text`\r\n  color: #eee;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const CircleCatch = styled.circle`\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport useSelectorPerType from \"../components/ui/useSelectorPerType\";\r\nimport GridLoop from \"./GridLoop/GridLoop\";\r\nimport { usePerTypeStates } from \"../components/ui/usePerTypeStates\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  max-width: 630px;\r\n  width: 100%;\r\n  margin: 100px auto;\r\n  border: 1px solid #aaa;\r\n  padding: 20px;\r\n`;\r\n\r\nconst CompareTypesGrid = ({ counter }) => {\r\n  const { selectedType, SelectorPerType } = useSelectorPerType();\r\n  const {\r\n    cogFuncsStates: [{ ei }, { sn }, { tf }, { jp }]\r\n  } = usePerTypeStates();\r\n\r\n  const [currPersonType, setCurrPersonType] = useState(ei.concat(sn, tf, jp));\r\n\r\n  return (\r\n    <Container className=\"compare-types-grid\">\r\n      {/* <SelectorPerType type={currPersonType} setType={setCurrPersonType} /> */}\r\n      <GridLoop\r\n        type={currPersonType}\r\n        setType={setCurrPersonType}\r\n        counter={counter}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CompareTypesGrid;\r\n","import styled from \"styled-components\";\r\n\r\nimport Slider from \"../../components/ui/Slider\";\r\nimport { usePrevious, round2Dec } from \"../../utils/helpers\";\r\nimport { cogFuncPriorities, cognitiveFunctions } from \"../../utils/globalConst\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ParamControls = ({ states, min, max, mbtiLetters, cogFuncsStates }) => {\r\n  const [{ ns, setNs }, { tf, setTf }, { xvn, setXvn }] = states;\r\n  let { ieLetter, nsLetter, tfLetter, pjLetter } = mbtiLetters;\r\n  const [\r\n    { ei: eiBtn, setEI },\r\n    { sn: nsBtn, setSN },\r\n    { tf: tfBtn, setTF },\r\n    { jp: pjBtn, setJP }\r\n  ] = cogFuncsStates;\r\n\r\n  // useEffect(() => {\r\n  //   setEI(ieLetter);\r\n  //   setSN(nsLetter);\r\n  //   setTF(tfLetter);\r\n  //   setJP(pjLetter);\r\n  // }, [ieLetter, nsLetter, tfLetter, pjLetter]);\r\n\r\n  // const prevXvn = usePrevious(xvn);\r\n  // const prevPjLetter = usePrevious(pjLetter);\r\n  // if (pjLetter !== prevPjLetter) {\r\n  //   setXvn(max - prevXvn);\r\n  // }\r\n\r\n  const prevEiBtn = usePrevious(eiBtn);\r\n  const prevNsBtn = usePrevious(nsBtn);\r\n  const prevTfBtn = usePrevious(tfBtn);\r\n  const prevPjBtn = usePrevious(pjBtn);\r\n\r\n  const ratio = [0.45, 0.3, 0.2, 0.05].map((d) => d * max * 2);\r\n  const cfPrShort = (idx) => cogFuncPriorities.map((d) => d.short)[idx];\r\n  const cfShort = (idx) => cognitiveFunctions.map((d) => d.short)[idx];\r\n  const prObj = [ns, tf]\r\n    .map((d) => [d, max - d])\r\n    .flat()\r\n    .map((d, i) => ({ cf: cfShort(i).toUpperCase(), val: d }))\r\n    .sort((a, b) => a.val - b.val)\r\n    .map((d, i) => ({ ...d, pr: cfPrShort(i), ratio: ratio[i] }));\r\n  const prDom = prObj.find((d) => d.pr === \"dom\").cf;\r\n  const prAux = prObj.find((d) => d.pr === \"aux\").cf;\r\n  const isExvert = xvn < max / 2;\r\n\r\n  if (eiBtn !== prevEiBtn) {\r\n    if (eiBtn === \"E\") {\r\n      setXvn(0.23);\r\n    }\r\n    if (eiBtn === \"I\") {\r\n      setXvn(0.66);\r\n    }\r\n  }\r\n\r\n  if (nsBtn !== prevNsBtn) {\r\n    if (nsBtn === \"N\") {\r\n      setNs(0.26);\r\n    }\r\n    if (nsBtn === \"S\") {\r\n      setNs(0.74);\r\n    }\r\n  }\r\n\r\n  if (tfBtn !== prevTfBtn) {\r\n    if (tfBtn === \"T\") {\r\n      setTf(0.24);\r\n    }\r\n    if (tfBtn === \"F\") {\r\n      setTf(0.76);\r\n    }\r\n  }\r\n\r\n  // if (pjBtn !== prevPjBtn) {\r\n  //   setXvn(max - prevXvn);\r\n  //   setNs(max - ns);\r\n  //   setTf(max - tf);\r\n  // }\r\n\r\n  return (\r\n    <Container>\r\n      <Slider\r\n        nameLeft=\"Extraverted (Dom.)\"\r\n        nameRight=\"Introverted (Dom.)\"\r\n        value={xvn}\r\n        setValue={setXvn}\r\n        min={min + 0.15}\r\n        max={max - 0.15}\r\n        step={0.01}\r\n      />\r\n      <Slider\r\n        nameLeft=\"Intuition\"\r\n        nameRight=\"Sensing\"\r\n        value={ns}\r\n        setValue={setNs}\r\n        min={min}\r\n        max={max}\r\n        step={0.01}\r\n      />\r\n      <Slider\r\n        nameLeft=\"Thinking\"\r\n        nameRight=\"Feeling\"\r\n        value={tf}\r\n        setValue={setTf}\r\n        min={min}\r\n        max={max}\r\n        step={0.01}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ParamControls;\r\n","import styled from \"styled-components\";\r\n\r\nconst SelectorButtons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 5px;\r\n  border: 1px solid #333;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 15px;\r\n  margin-bottom: 5px;\r\n  border: none;\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n  background-color: \"#eee\";\r\n  ${({ letter, arrFuncState }) =>\r\n    letter === arrFuncState &&\r\n    `\r\n    background-color: #e6ee9c;\r\n    font-weight: 700;\r\n  `};\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst SelectorPerFunc = ({ cogFuncsArrs, cogFuncsStates }) => {\r\n  const [eiArr, snArr, tfArr, jpArr] = cogFuncsArrs;\r\n  const [\r\n    { ei, setEI },\r\n    { sn, setSN },\r\n    { tf, setTF },\r\n    { jp, setJP }\r\n  ] = cogFuncsStates;\r\n\r\n  const getFuncState = (letter) => {\r\n    const either = (d) => d === letter;\r\n\r\n    if (eiArr.some(either)) return ei;\r\n    else if (snArr.some(either)) return sn;\r\n    else if (tfArr.some(either)) return tf;\r\n    else if (jpArr.some(either)) return jp;\r\n  };\r\n\r\n  const handleButtonClick = (letter) => {\r\n    const either = (d) => d === letter;\r\n\r\n    if (eiArr.some(either)) {\r\n      setEI(letter);\r\n    } else if (snArr.some(either)) {\r\n      setSN(letter);\r\n    } else if (tfArr.some(either)) {\r\n      setTF(letter);\r\n    } else if (jpArr.some(either)) {\r\n      setJP(letter);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"selector\">\r\n      <SelectorButtons className=\"selector-buttons\">\r\n        {cogFuncsArrs.map((group, i) => (\r\n          <ButtonGroup key={`btn-group-${i}`} className=\"btn-group\">\r\n            {group.map((letter, j) => (\r\n              <Button\r\n                key={`button-${j}-${letter}`}\r\n                onClick={() => handleButtonClick(letter)}\r\n                letter={letter}\r\n                arrFuncState={getFuncState(letter)}\r\n              >\r\n                {letter}\r\n              </Button>\r\n            ))}\r\n          </ButtonGroup>\r\n        ))}\r\n      </SelectorButtons>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectorPerFunc;\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport CognitiveFunction from \"../../components/CognitiveFunction\";\r\nimport ParamControls from \"./ParamControls\";\r\nimport SelectorPerFunc from \"../../components/ui/SelectorPerFunc\";\r\nimport { usePerTypeStates } from \"../../components/ui/usePerTypeStates\";\r\nimport { cognitiveFunctions, cogFuncPriorities } from \"../../utils/globalConst\";\r\nimport { cogFuncAllConfig } from \"../../data/cogFuncAllConfig\";\r\nimport { round2Dec } from \"../../utils/helpers\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst CogFuncExplorer = ({ type = \"ESTJ\", max = 0.99, min = 0.01 }) => {\r\n  const ratio = [max * 0.5, max * 0.25, max * 0.12, max * 0.07];\r\n  const maxDomInf = ratio[0] + ratio[3];\r\n  const maxAuxTer = ratio[1] + ratio[2];\r\n\r\n  const domAux = [\"dominant\", \"auxiliary\"];\r\n  const intSens = [\"intuition\", \"sensing\"];\r\n  const thinkFeel = [\"thinking\", \"feeling\"];\r\n\r\n  const [xvn, setXvn] = useState(round2Dec(max * 0.35));\r\n  const [ns, setNs] = useState(round2Dec(max * 0.15));\r\n  const [tf, setTf] = useState(round2Dec(max * 0.75));\r\n  const states = [\r\n    { ns, setNs },\r\n    { tf, setTf },\r\n    { xvn, setXvn }\r\n  ];\r\n\r\n  const paramValues = {\r\n    n: ns,\r\n    s: round2Dec(max - ns),\r\n    t: tf,\r\n    f: round2Dec(max - tf)\r\n  };\r\n\r\n  // const funcsStack = [\r\n  //   { cogFunc: \"thinking\", isExvert: true, stackFunc: \"dominant\" },\r\n  //   { cogFunc: \"sensing\", isExvert: false, stackFunc: \"auxiliary\" },\r\n  //   { cogFunc: \"intuition\", isExvert: true, stackFunc: \"tertiary\" },\r\n  //   { cogFunc: \"feeling\", isExvert: false, stackFunc: \"inferior\" }\r\n  // ];\r\n\r\n  /* Generate function stack */\r\n  const cogFuncShortIdx = (cfshort) =>\r\n    cognitiveFunctions.map((d) => d.short).indexOf(cfshort);\r\n  const isOdd = (v) => v % 2 !== 0;\r\n  const isDomExvert = xvn < max / 2;\r\n  const funcsStack = Object.entries(paramValues)\r\n    .sort((a, b) => a[1] - b[1])\r\n    .map((d, i) => {\r\n      const cfshort = d[0];\r\n\r\n      const isExvert = isOdd(i) ? !isDomExvert : isDomExvert;\r\n      return {\r\n        cogFunc: cognitiveFunctions[cogFuncShortIdx(cfshort)].function,\r\n        isExvert,\r\n        stackFunc: cogFuncPriorities[i].function\r\n      };\r\n    });\r\n\r\n  const sfIdx = (sf) => funcsStack.map((d) => d.stackFunc).indexOf(sf);\r\n  const cogFuncShort = (cf) =>\r\n    cognitiveFunctions[cognitiveFunctions.map((d) => d.function).indexOf(cf)]\r\n      .short;\r\n  const getFuncVal = (sf = \"dominant\") => {\r\n    const { cogFunc } = funcsStack[sfIdx(sf)];\r\n\r\n    if (sf === \"dominant\") {\r\n      return paramValues[cogFuncShort(cogFunc)];\r\n    } else return paramValues[cogFuncShort(cogFunc)];\r\n  };\r\n\r\n  /* Setup custom config styles for the chart to use */\r\n  const { cogFuncConfig, stackFuncConfig } = cogFuncAllConfig[\"default\"];\r\n  const sfConfigCustom = stackFuncConfig.map((sf) => {\r\n    const { stackFunc } = sf;\r\n\r\n    return {\r\n      ...sf,\r\n      style: {\r\n        rotation: -18 * 5 * getFuncVal(stackFunc)\r\n      }\r\n    };\r\n  });\r\n  const xvnConfigCustom = [\r\n    {\r\n      xVersFunc: \"extraversion\",\r\n      style: { areaRatio: xvn / 1, innerRadiusRatio: xvn }\r\n    },\r\n    {\r\n      xVersFunc: \"introversion\",\r\n      style: { areaRatio: 1 / xvn, innerRadiusRatio: xvn }\r\n    }\r\n  ];\r\n\r\n  const config = {\r\n    cogFuncConfig,\r\n    stackFuncConfig: sfConfigCustom,\r\n    xVersionConfig: xvnConfigCustom\r\n  };\r\n\r\n  const radius = 150;\r\n  const svgDims = { height: radius * 2, width: radius * 2, radius };\r\n  const { width, height } = svgDims;\r\n\r\n  const getDomCogFunc = (daArr, pjArr) =>\r\n    funcsStack\r\n      .filter((d) => daArr.some((e) => e === d.stackFunc))\r\n      .filter((d) => pjArr.some((e) => e === d.cogFunc))[0].cogFunc;\r\n  const isPOrJ = (setFunc, pr) =>\r\n    setFunc.some((d) => d === funcsStack[sfIdx(pr)].cogFunc) ? \"P\" : \"J\";\r\n  let mbtiLetters = {\r\n    ieLetter: isDomExvert ? \"E\" : \"I\",\r\n    nsLetter: cogFuncShort(getDomCogFunc(domAux, intSens)).toUpperCase(),\r\n    tfLetter: cogFuncShort(getDomCogFunc(domAux, thinkFeel)).toUpperCase(),\r\n    pjLetter: isDomExvert\r\n      ? isPOrJ(intSens, \"dominant\")\r\n      : isPOrJ(intSens, \"auxiliary\")\r\n  };\r\n  let { ieLetter, nsLetter, tfLetter, pjLetter } = mbtiLetters;\r\n\r\n  /* Selector Per Function Buttons */\r\n  const { cogFuncsArrs, cogFuncsStates } = usePerTypeStates();\r\n\r\n  return (\r\n    <Container className=\"cogfunc-explorer-container\">\r\n      <h2>\r\n        {ieLetter} {nsLetter} {tfLetter} {pjLetter}\r\n      </h2>\r\n      <SelectorPerFunc\r\n        cogFuncsArrs={cogFuncsArrs}\r\n        cogFuncsStates={cogFuncsStates}\r\n      />\r\n      <svg width={width} height={height} viewBox={`0 0 500 500`}>\r\n        {funcsStack.map((d, i) => (\r\n          <CognitiveFunction\r\n            key={`cogfunc-${i}`}\r\n            type={type}\r\n            chartId={\"cogfunc-explorer\"}\r\n            config={config}\r\n            hasTransition={false}\r\n            {...svgDims}\r\n            {...d}\r\n          />\r\n        ))}\r\n      </svg>\r\n      <ParamControls\r\n        states={states}\r\n        min={min}\r\n        max={max}\r\n        mbtiLetters={mbtiLetters}\r\n        cogFuncsStates={cogFuncsStates}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CogFuncExplorer;\r\n","import { useState, useEffect } from \"react\";\n\nimport \"./styles.css\";\n\n// import SoloLoop from \"./containers/SoloLoop\";\nimport CompareTypesGrid from \"./containers/CompareTypesGrid\";\n// import Walkthrough from \"./containers/Walkthrough\";\nimport CogFuncExplorer from \"./containers/CogFuncExplorer/CogFuncExplorer\";\nimport { personTypesData } from \"./data/personTypesData\";\n\nexport default function App() {\n  const [counter, setCounter] = useState(0);\n  const personTypesArray = personTypesData.map((d) => d.type);\n  const loopTime = 1000;\n\n  // useEffect(() => {\n  //   const timer = setInterval(() => {\n  //     setCounter((c) => (c <= personTypesArray.length - 2 ? c + 1 : 0));\n  //   }, loopTime);\n\n  //   return () => clearInterval(timer);\n  // });\n\n  return (\n    <div className=\"App\">\n      <CogFuncExplorer />\n      {/* <CompareTypesGrid counter={counter} /> */}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}